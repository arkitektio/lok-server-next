# Generated by Django 4.2.5 on 2024-03-08 11:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_choices_field.fields
import fakts.enums
import fakts.fields
import oauth2_provider.generators
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.OAUTH2_PROVIDER_APPLICATION_MODEL),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="App",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=1000)),
                ("identifier", fakts.fields.IdentifierField(max_length=1000)),
                (
                    "logo",
                    fakts.fields.S3ImageField(blank=True, max_length=1000, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Client",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "kind",
                    django_choices_field.fields.TextChoicesField(
                        choices=[
                            ("website", "WEBSITE (Value represent WEBSITE)"),
                            (
                                "development",
                                "DEVELOPMENT (Value represent DEVELOPMENT)",
                            ),
                            ("desktop", "DESKTOP (Value represent DESKTOP A端端)"),
                        ],
                        choices_enum=fakts.enums.ClientKindChoices,
                        default="development",
                        help_text="The kind of transformation",
                        max_length=11,
                    ),
                ),
                ("public", models.BooleanField(default=False)),
                (
                    "token",
                    models.CharField(default=uuid.uuid4, max_length=10000, unique=True),
                ),
                (
                    "client_id",
                    models.CharField(
                        default=oauth2_provider.generators.generate_client_id,
                        max_length=1000,
                        unique=True,
                    ),
                ),
                (
                    "client_secret",
                    models.CharField(
                        default=oauth2_provider.generators.generate_client_secret,
                        max_length=1000,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Composition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=1000, unique=True)),
                (
                    "description",
                    models.TextField(blank=True, max_length=1000, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=1000)),
                ("identifier", fakts.fields.IdentifierField(max_length=1000)),
                (
                    "logo",
                    fakts.fields.S3ImageField(blank=True, max_length=1000, null=True),
                ),
                ("description", models.TextField()),
                (
                    "key",
                    models.CharField(default=uuid.uuid4, max_length=1000, unique=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ServiceInstance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("backend", models.CharField(max_length=1000)),
                ("identifier", models.CharField(max_length=1000)),
                ("template", models.TextField()),
                (
                    "composition",
                    models.ManyToManyField(
                        related_name="instances", to="fakts.composition"
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="instances",
                        to="fakts.service",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Release",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("version", fakts.fields.VersionField(max_length=1000)),
                ("name", models.CharField(max_length=1000)),
                (
                    "logo",
                    fakts.fields.S3ImageField(blank=True, max_length=1000, null=True),
                ),
                ("scopes", models.JSONField(default=list)),
                ("requirements", models.JSONField(default=list)),
                (
                    "app",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="releases",
                        to="fakts.app",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DeviceCode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("code", models.CharField(max_length=100, unique=True)),
                (
                    "staging_kind",
                    django_choices_field.fields.TextChoicesField(
                        choices=[
                            ("website", "WEBSITE (Value represent WEBSITE)"),
                            (
                                "development",
                                "DEVELOPMENT (Value represent DEVELOPMENT)",
                            ),
                            ("desktop", "DESKTOP (Value represent DESKTOP A端端)"),
                        ],
                        choices_enum=fakts.enums.ClientKindChoices,
                        default="development",
                        help_text="The kind of transformation",
                        max_length=11,
                    ),
                ),
                ("staging_manifest", models.JSONField(default=dict)),
                (
                    "staging_logo",
                    fakts.fields.S3ImageField(blank=True, max_length=1000, null=True),
                ),
                ("staging_public", models.BooleanField(default=False)),
                ("staging_redirect_uris", models.JSONField(default=list)),
                ("expires_at", models.DateTimeField()),
                ("denied", models.BooleanField(default=False)),
                (
                    "client",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="fakts.client",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="client",
            name="composition",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="clients",
                to="fakts.composition",
            ),
        ),
        migrations.AddField(
            model_name="client",
            name="oauth2_client",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="client",
                to=settings.OAUTH2_PROVIDER_APPLICATION_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="client",
            name="release",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="clients",
                to="fakts.release",
            ),
        ),
        migrations.AddField(
            model_name="client",
            name="tenant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="managed_clients",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="client",
            name="user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="clients",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddConstraint(
            model_name="serviceinstance",
            constraint=models.UniqueConstraint(
                fields=("backend", "identifier"),
                name="Only one instance per backend and identifier",
            ),
        ),
        migrations.AddConstraint(
            model_name="release",
            constraint=models.UniqueConstraint(
                fields=("app", "version"), name="Only one per app and version"
            ),
        ),
        migrations.AddConstraint(
            model_name="client",
            constraint=models.UniqueConstraint(
                fields=("release", "user", "kind"),
                name="Only one per releast, tenankt and kind",
            ),
        ),
    ]
